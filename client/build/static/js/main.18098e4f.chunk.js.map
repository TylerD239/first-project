{"version":3,"sources":["hooks/http.hook.js","context/AuthContext.js","components/LinksList.js","components/Loader.js","pages/LinksPage.js","pages/CreatePage.js","components/LinkCard.js","pages/DetailPage.js","pages/AuthPage.js","hooks/message.hook.js","components/Navbar.js","App.js","hooks/auth.hook.js","routes.js","serviceWorker.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","request","useCallback","url","a","method","body","headers","JSON","stringify","fetch","response","json","data","ok","Error","message","clearError","noop","AuthContext","createContext","token","userId","login","logout","isAuthenticated","LinksList","links","length","map","link","index","key","_id","from","to","className","Loader","LinksPage","useContext","setLink","fetchLinks","Authorization","fetched","useEffect","CreatePage","history","useHistory","auth","window","M","updateTextFields","pressHandler","event","push","style","paddingTop","placeholder","id","type","value","onChange","e","target","onKeyPress","htmlFor","LinkCard","href","rel","clicks","Date","date","toLocaleDateString","DetailPage","linkId","useParams","getLink","AuthPage","text","toast","html","email","password","form","setForm","changeHandler","name","registerHandler","loginHandler","marginRight","disabled","onClick","Navbar","padding","preventDefault","App","setToken","setUserId","ready","setReady","jwtToken","localStorage","setItem","removeItem","parse","getItem","useAuth","routes","path","exact","Provider","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.18098e4f.chunk.js","sourcesContent":["import {useState, useCallback} from 'react'\r\n\r\nexport const useHttp = ()=> {\r\n\tconst [loading, setLoading] = useState(false)\r\n\tconst [error, setError] = useState(null)\r\n\r\n\tconst request = useCallback( async (url, method = 'GET', body = null, headers = {})=> {\r\n\r\n\t\tsetLoading(true)\r\n\ttry {\r\n\r\n\t\tif (body) {\r\n\t\t\tbody = JSON.stringify(body)\r\n\t\t\theaders['Content-Type'] = 'application/json'\r\n\t\t}\r\n\r\n\t\tconst response = await fetch(url, {method, body, headers})\r\n\t\tconst data = await response.json()\r\n\r\n\t\tif (!response.ok) {\r\n\t\t\tthrow new Error(data.message || 'что-то не так')\r\n\t\t}\r\n\t\t\r\n\t\tsetLoading(false)\r\n\r\n\t\treturn data\r\n\r\n\t} catch (e) {\r\n\t\r\n\t\tsetLoading(false)\r\n\t\tsetError(e.message)\r\n\t\tthrow e\r\n\t}\r\n\t}, [])\r\n\r\n\tconst clearError = useCallback(()=> setError(null),[])\r\n\r\nreturn { loading, request, error, clearError}\r\n}","import {createContext} from 'react'\r\n\r\nfunction noop() {}\r\nexport const AuthContext = createContext({\r\n\ttoken: null,\r\n\tuserId: null,\r\n\tlogin: noop,\r\n\tlogout: noop,\r\n\tisAuthenticated: false\r\n})","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\n\r\nexport const LinksList = ({links}) => {\r\n\tif (!links.length) {\r\n\t\treturn <p className=\"center\">Ссылок пока нет</p>\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t      <table>\r\n\t        <thead>\r\n\t          <tr>\r\n\t              <th>№</th>\r\n\t              <th>Оригинальная</th>\r\n\t              <th>Сокращенная</th>\r\n\t              <th>Открыть</th>\r\n\t          </tr>\r\n\t        </thead>\r\n\r\n\t        <tbody>\r\n\t        {links.map((link, index) => {return (\r\n\t          <tr key={link._id}>\r\n\t            <td>{index + 1}</td>\r\n\t            <td>{link.from}</td>\r\n\t            <td>{link.to}7</td>\r\n\t            <td>\r\n\t\t\t\t\t<Link to={`/detail/${link._id}`}>Открыть</Link>\r\n\t            </td>\r\n\t          </tr>\r\n\t          )\r\n\t        })}\r\n\t        </tbody>\r\n\t      </table>\r\n\t      \r\n\t\t</>\r\n\t\t)\r\n}","import React from 'react'\r\n\r\nexport const Loader = () => {\r\n\treturn (\r\n\t<div> \r\n\t\t<div className=\"preloader-wrapper active\">\r\n\t\t    <div className=\"spinner-layer spinner-red-only\">\r\n\t\t      <div className=\"circle-clipper left\">\r\n\t\t        <div className=\"circle\"></div>\r\n\t\t      </div><div className=\"gap-patch\">\r\n\t\t        <div className=\"circle\"></div>\r\n\t\t      </div><div className=\"circle-clipper right\">\r\n\t\t        <div className=\"circle\"></div>\r\n\t\t      </div>\r\n\t\t    </div>\r\n\t  \t</div>\r\n\t</div>\r\n\t)\r\n}","import React, {useState, useCallback, useContext, useEffect} from 'react'\r\n// import {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {LinksList} from '../components/LinksList' \r\nimport {Loader} from '../components/Loader' \r\n\r\nexport const LinksPage = () => {\r\n\tconst {token} = useContext(AuthContext)\r\n\tconst {request, loading} = useHttp()\r\n\tconst [links, setLink] = useState([])\r\n\r\n\tconst fetchLinks = useCallback(async () => {\r\n\t\ttry {\r\n\t\t\tconst fetched = await request(`/api/link`, 'GET', null, {\r\n\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t})\r\n\t\t\tsetLink(fetched)\r\n\t\t} catch (e) {\r\n\r\n\t\t}\r\n\t}, [token, request])\r\n\r\n\tuseEffect( () => {\r\n\t\tfetchLinks()\r\n\t}, [fetchLinks])\r\n\r\n\tif (loading) {\r\n\t\treturn <Loader />\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!loading && <LinksList links={links} />}\r\n\t\t</>\r\n\t)\r\n}","import React, {useContext, useEffect,useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {useHistory} from 'react-router-dom'\r\n\r\n\r\nexport const CreatePage = () => {\r\n\tconst history = useHistory();\r\n\r\n\tconst auth = useContext(AuthContext)\r\n\r\n\tconst {request} = useHttp()\r\n\r\n\tconst [link, setLink] = useState('')\r\n\r\n\tuseEffect( () => {\r\n\t\twindow.M.updateTextFields()\r\n\t}, [])\r\n\r\n\tconst pressHandler = async event => {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\ttry {\r\n\t\t\t\tconst data = await request('/api/link/generate', 'POST', {from: link}, {Authorization: `Bearer ${auth.token}`})\r\n\t\t\t\t\r\n\t\t\t\thistory.push(`/detail/${data.link._id}`)\r\n\t\t\t} catch (e) {}\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col s8 offset-s2\" style={{paddingTop: '2 rem'}}>\r\n\r\n      \t\t    <div className=\"input-field\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t placeholder=\"Вставьте ссылку\"\r\n\t\t\t\t\t id=\"link\"\r\n\t\t\t\t\t type=\"text\"\r\n\t\t\t\t\t value={link}\r\n\t\t\t\t\t onChange = {e => setLink(e.target.value)}\r\n\t\t\t\t\t onKeyPress={pressHandler}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"link\">введите ссылку</label>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import React from 'react'\r\n\r\nexport const LinkCard = ({link}) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h2>Ссылка</h2>\r\n\t\t\t<p>Ваша ссылка <a href={link.to} target=\"_blank\" rel=\"noopener noreferrer\">{link.to}</a></p>\r\n\t\t\t<p>Откуда <a href={link.from} target=\"_blank\" rel=\"noopener noreferrer\">{link.from}</a></p>\r\n\t\t\t<p>Количество кликов: <strong>{link.clicks}</strong></p>\r\n\t\t\t<p>Дата создания: <strong>{new Date(link.date).toLocaleDateString()}</strong></p>\r\n\t\t</>\r\n\t\t)\r\n}","import React, {useState, useCallback, useContext, useEffect} from 'react'\r\nimport {useParams} from 'react-router-dom'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\nimport {LinkCard} from '../components/LinkCard' \r\nimport {Loader} from '../components/Loader' \r\n\r\nexport const DetailPage = () => {\r\n\tconst {token} = useContext(AuthContext)\r\n\tconst {request, loading} = useHttp()\r\n\tconst [link, setLink] = useState(null)\r\n\tconst linkId = useParams().id\r\n\r\n\tconst getLink = useCallback(async () => {\r\n\t\ttry {\r\n\t\t\tconst fetched = await request(`/api/link/${linkId}`, 'GET', null, {\r\n\t\t\t\tAuthorization: `Bearer ${token}`\r\n\t\t\t})\r\n\t\t\tsetLink(fetched)\r\n\t\t} catch (e) {\r\n\r\n\t\t}\r\n\t}, [token, linkId, request])\r\n\r\n\tuseEffect( () => {\r\n\t\tgetLink()\r\n\t}, [getLink])\r\n\r\n\tif (loading) {\r\n\t\treturn <Loader />\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{!loading && link && <LinkCard link={link} />}\r\n\t\t</>\r\n\t)\r\n}","import React, {useContext, useEffect, useState} from 'react'\r\nimport {useHttp} from '../hooks/http.hook'\r\nimport {useMessage} from '../hooks/message.hook'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nexport const AuthPage = () => {\r\n\tconst auth = useContext(AuthContext)\r\n\tconst message = useMessage()\r\n\tconst {loading, request, error, clearError} = useHttp()\r\n\tconst [form, setForm] = useState({\r\n\t\temail: '', password:''\r\n\t})\r\n\r\n\tuseEffect( () => {\r\n\t\tmessage(error)\r\n\t\tclearError();\r\n\t}, [error, message, clearError])\r\n\r\n\tuseEffect( () => {\r\n\t\twindow.M.updateTextFields()\r\n\t}, [])\r\n\tconst changeHandler = event => {\r\n\t\tsetForm({...form, [event.target.name]: event.target.value})\r\n\t}\r\n\r\n\tconst registerHandler = async () => {\r\n\t\ttry {\r\n\t\t\tconst data = await request('/api/auth/register', 'POST', {...form})\r\n\t\t\tmessage(data.message)\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n\tconst loginHandler = async () => {\r\n\t\ttry {\r\n\t\t\tconst data = await request('/api/auth/login', 'POST', {...form})\r\n\t\t\tauth.login(data.token, data.userId)\r\n\t\t} catch (e) {}\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"row\">\r\n\t\t\t<div className=\"col s6 offset-s3\">\r\n\t\t\t\t<h1>Сократи ссылку</h1>\r\n\t\t\t\t <div className=\"card blue darken-1\">\r\n\t\t\t        <div className=\"card-content white-text\">\r\n\t\t\t        \t<span className=\"card-title\">Авторизация</span>\r\n\r\n\t\t\t      \t\t<div>  \r\n\t\t\t      \t\t    <div className=\"input-field\">\r\n          \t\t\t\t\t\t<input\r\n          \t\t\t\t\t\t placeholder=\"Введите Email\"\r\n          \t\t\t\t\t\t id=\"email\"\r\n          \t\t\t\t\t\t type=\"email\"\r\n          \t\t\t\t\t\t name=\"email\"\r\n          \t\t\t\t\t\t className=\"yellow-input\"\r\n          \t\t\t\t\t\t value={form.email}\r\n          \t\t\t\t\t\t onChange = {changeHandler}\r\n          \t\t\t\t\t\t />\r\n          \t\t\t\t\t\t<label htmlFor=\"email\">email</label>\r\n       \t\t\t\t\t\t</div>\r\n\t\t\t        \t</div>\t\r\n\r\n\t\t\t        \t<div>  \r\n\t\t\t      \t\t    <div className=\"input-field\">\r\n          \t\t\t\t\t\t<input\r\n          \t\t\t\t\t\t placeholder=\"Введите пароль\"\r\n          \t\t\t\t\t\t id=\"password\"\r\n          \t\t\t\t\t\t type=\"password\"\r\n          \t\t\t\t\t\t name=\"password\"\r\n          \t\t\t\t\t\t value={form.password}\r\n          \t\t\t\t\t\t onChange = {changeHandler}\r\n          \t\t\t\t\t\t />\r\n          \t\t\t\t\t\t<label htmlFor=\"password\">password</label>\r\n       \t\t\t\t\t\t</div>\r\n\t\t\t        \t</div>\r\n\r\n\r\n\t\t\t        </div>\r\n\r\n\t\t\t        <div className=\"card-action\">\r\n\t\t\t\t\t\t<button \r\n\t\t\t\t\t\tclassName=\"btn yellow darken-4\" \r\n\t\t\t\t\t\tstyle={{marginRight:10}} \r\n\t\t\t\t\t\tdisabled={loading}\r\n\t\t\t\t\t\tonClick={loginHandler}\r\n\t\t\t\t\t\t>Войти</button>\r\n\t\t\t\t\t\t<button className=\"btn grey lighten-1 black-text\" onClick={registerHandler} disabled={loading}>Регистрация</button>\r\n      \t \t\t\t</div>\r\n     \t\t\t </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}","import {useCallback} from 'react'\r\n\r\nexport const useMessage = () => {\r\n\treturn useCallback( text => {\r\n\t\tif (window.M && text) {\r\n\t\t\twindow.M.toast({html: text})\r\n\t\t}\r\n\t}, [])\r\n}","import React, {useContext} from 'react'\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {AuthContext} from '../context/AuthContext'\r\n\r\nexport const Navbar = () => {\r\n\tconst history = useHistory()\r\n\tconst auth = useContext(AuthContext)\r\n\r\n\tconst logoutHandler = event => {\r\n\t\tevent.preventDefault()\r\n\t\tauth.logout()\r\n\t\thistory.push('/')\r\n\t}\r\n\treturn (\r\n\t\t  <nav>\r\n\t\t    <div className=\"nav-wrapper blue darken-1\" style={{padding: '0 2rem'}}>\r\n\t\t      <span className=\"brand-logo\">Сокращение ссылок</span>\r\n\t\t      <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\r\n\t\t        <li><NavLink to=\"/create\">Создать</NavLink></li>\r\n\t\t        <li><NavLink to=\"/links\">Ссылки</NavLink></li>\r\n\t\t        <li><a href=\"/\" onClick = {logoutHandler}>Выйти</a></li>\r\n\t\t      </ul>\r\n\t\t    </div>\r\n\t\t  </nav>\r\n\r\n\t\t)\r\n}","import React from 'react'\nimport {useRoutes} from './routes'\nimport {BrowserRouter as Router} from 'react-router-dom'\nimport 'materialize-css'\nimport {useAuth} from './hooks/auth.hook'\nimport {AuthContext} from './context/AuthContext'\nimport {Navbar} from './components/Navbar'\nimport {Loader} from './components/Loader'\n\nfunction App() {\n\tconst {token, login, logout, userId, ready} = useAuth()\n\tconst isAuthenticated = !!token\n\tconst routes = useRoutes(isAuthenticated)\n\n\tif (!ready) {\n\t\treturn <Loader />\n\t}\n\n  return (\n  \t<AuthContext.Provider value = {{token, login, logout, userId, isAuthenticated}}>\n\t  \t<Router>\n\t  \t\t{isAuthenticated && <Navbar />}\n\t\t    <div className = \"container\">\n\t\t    \t{routes}\n\t\t    </div>\n\t    </Router>\n    </AuthContext.Provider>\n  )\n}\n\nexport default App;\n","import {useState, useCallback, useEffect} from 'react'\r\n\r\nconst storageName = 'userData'\r\nexport const useAuth = () => {\r\n\tconst [token, setToken] = useState(null)\r\n\tconst [userId, setUserId] = useState(null)\r\n\tconst [ready, setReady] = useState(false)\r\n\r\n\tconst login = useCallback((jwtToken,id) => {\r\n\t\tsetToken(jwtToken)\r\n\t\tsetUserId(id)\r\n\r\n\t\tlocalStorage.setItem(storageName, JSON.stringify({userId :id,token:jwtToken}))\r\n\t},[])\r\n\r\n\tconst logout = useCallback(() => {\r\n\t\tsetToken(null)\r\n\t\tsetUserId(null)\r\n\t\tlocalStorage.removeItem(storageName)\r\n\t},[] )\r\n\r\n\tuseEffect(()=>{\r\n\t\tconst data = JSON.parse(localStorage.getItem(storageName))\r\n\t\tif (data && data.token) {\r\n\t\t\tlogin(data.token, data.userId)\r\n\t\t}\r\n\t\tsetReady(true)\r\n\t}, [login])\r\n\r\n\treturn {login, logout, token, userId, ready}\r\n}","import React from 'react'\r\nimport {Switch, Route, Redirect} from 'react-router-dom'\r\nimport {LinksPage} from './pages/LinksPage'\r\nimport {CreatePage} from './pages/CreatePage'\r\nimport {DetailPage} from './pages/DetailPage'\r\nimport {AuthPage} from './pages/AuthPage'\r\n\r\nexport const useRoutes = isAuthenicated => {\r\n\tif (isAuthenicated) {\r\n\t\treturn (\r\n\t\t\t<Switch>\r\n\t\t\t\t<Route path=\"/links\" exact>\r\n\t\t\t\t\t<LinksPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path=\"/create\" exact>\r\n\t\t\t\t\t<CreatePage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Route path = \"/detail/:id\">\r\n\t\t\t\t\t<DetailPage />\r\n\t\t\t\t</Route>\r\n\t\t\t\t<Redirect to=\"/create\" />\r\n\t\t\t</Switch>\r\n\t\t\t)\r\n\t}\r\n\r\n\treturn ( \r\n\t<Switch>\r\n\t\t<Route path=\"/\" exact>\r\n\t\t\t<AuthPage />\r\n\t\t</Route>\r\n\t\t<Redirect to=\"/\"/>\r\n\t</Switch>\r\n\t)\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}